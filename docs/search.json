[{"path":"/articles/Chapter 1.html","id":"step-1-1---upload-vcf-to-r","dir":"Articles","previous_headings":"","what":"Step 1.1 - Upload VCF to R","title":"Chapter 1 - VCF file to GWAS matrix","text":"step mainly uses “Upload_vcf_to_R” function. Description can also seen running ?Upload_vcf_to_R console Rstudio loading VCFtoGWAS package.","code":""},{"path":"/articles/Chapter 1.html","id":"steps","dir":"Articles","previous_headings":"Step 1.1 - Upload VCF to R","what":"Steps:","title":"Chapter 1 - VCF file to GWAS matrix","text":"Load VCFtoGWAS library Define parameters used uploading saving: VCF file path Path wish save results Whether ’d like save /see results Run Upload_vcf_to_R returned list containing filtered fixed section gt section genotypes (see VCF info General Section) also path two saved (’ll used next step)","code":""},{"path":"/articles/Chapter 1.html","id":"output","dir":"Articles","previous_headings":"Step 1.1 - Upload VCF to R","what":"Output:","title":"Chapter 1 - VCF file to GWAS matrix","text":"Notice “unwanted” column marks strain isn’t wanted (pre-filtration done). can omitted next step. step1.1_output","code":""},{"path":"/articles/Chapter 1.html","id":"step-1-2---filter","dir":"Articles","previous_headings":"","what":"Step 1.2 - Filter","title":"Chapter 1 - VCF file to GWAS matrix","text":"extracting fixed information gt section vcf file, time filter data. First , uploaded vcf wasn’t pre-filtered contain desired strains (using “usegalaxy” VCFselectsamples tool), can use step get strains wish analyze. array strain names isn’t provided, strains file used analysis. filtration, rows (SNPs) might contain data (NA). second thing done step omitting variants (SNPs). Notice can choose whether omit SNPs known appear remaining population. Meaning information exists don’t appear strain. reason filter amount examined SNPs affects p-values correcting multiple testing. reason filter sort baseline maybe shouldn’t omitted. decided filter. example, 60 strains worked , initial amount variants : 1,754,866 filtering “NA”, amount reduced : 1,754,079 (meaning 787 omitted) filtering “[NA /0/0]”, amount reduced : 393,334 (meaning 1,361,532 omitted). latter used tests. main function used step “Filter_genotypes”. function returns list 3 objects: fixed information (left part output illustration), filtered genotype matrix (right part), string directory file saved.","code":""},{"path":"/articles/Chapter 1.html","id":"output-1","dir":"Articles","previous_headings":"Step 1.2 - Filter","what":"Output:","title":"Chapter 1 - VCF file to GWAS matrix","text":"Notice “unwanted” column filtered . Also last row contained Na. chose keep rows SNPs 0/0 across strains, first row omitted step1.2_output","code":""},{"path":"/articles/Chapter 1.html","id":"step-1-3---expand","dir":"Articles","previous_headings":"","what":"Step 1.3 - Expand","title":"Chapter 1 - VCF file to GWAS matrix","text":"step, fixed info (left part output illustration) expanded row represent one SNP INDEL multiple options per position. genotype matrix equally expanded. words, aim now make row SNP-specific rather location-specific. number variants (alterations) per chromosomal location saved array named “indication”. expanding, fixed info looks like : CHROM POS REF  ALT  1 chromosome1  33  CA    C  2 chromosome1 137   C  CCT  3 chromosome1 176  CG C,AG  4 chromosome1 184   C    G expanding: CHROM POS REF ALT  1.0 chromosome1  33  CA   C  2.0 chromosome1 137   C CCT  3.0 chromosome1 176  CG   C  3.1 chromosome1 176  CG  AG  4.0 chromosome1 184   C   G case, indication array :  c(1, 1, 1, 2, 1) genotype matrix, replicate rows similarly replicated fixed information: Going : CCG   BNT   BHF CEQ   CFR   BQQ     chromosome1_33  NA    NA    NA  NA    NA    \"0/0\"  chromosome1_137 NA    NA    NA  \"0/0\" NA    NA     chromosome1_176 \"0/1\" \"0/0\" NA  \"0/2\" \"0/0\" NA     chromosome1_184 \"0/1\" \"0/0\" NA  NA    \"0/0\" \"0/0\" : CCG   BNT   BHF CEQ   CFR   BQQ    chromosome1_33    NA    NA    NA  NA    NA    \"0/0\"  chromosome1_137   NA    NA    NA  \"0/0\" NA    NA     chromosome1_176   \"0/1\" \"0/0\" NA  \"0/2\" \"0/0\" NA     chromosome1_176.1 \"0/1\" \"0/0\" NA  \"0/2\" \"0/0\" NA     chromosome1_184   \"0/1\" \"0/0\" NA  NA    \"0/0\" \"0/0\" indication array help us next step. can see expanded example rows 3 4 identical genotype matrix (chr1_176 chr1_176.1) different fixed info (3.0 3.1). , creating GWAS matrix, use indication array know digit look . 3rd index array “1”, row number 3 genotype matrix, count number instances number “1” strain (0/1 1 instance, 1/1 2 instances, 0/0 0 instances 0/2). 4th index array “2”, row number 4 genotype matrix, count number instances number “2” strain (0/2 1 instance…). main function used “Expand_files”","code":"CHROM POS REF  ALT  1 chromosome1  33  CA    C  2 chromosome1 137   C  CCT  3 chromosome1 176  CG C,AG  4 chromosome1 184   C    G CHROM POS REF ALT  1.0 chromosome1  33  CA   C  2.0 chromosome1 137   C CCT  3.0 chromosome1 176  CG   C  3.1 chromosome1 176  CG  AG  4.0 chromosome1 184   C   G CCG   BNT   BHF CEQ   CFR   BQQ     chromosome1_33  NA    NA    NA  NA    NA    \"0/0\"  chromosome1_137 NA    NA    NA  \"0/0\" NA    NA     chromosome1_176 \"0/1\" \"0/0\" NA  \"0/2\" \"0/0\" NA     chromosome1_184 \"0/1\" \"0/0\" NA  NA    \"0/0\" \"0/0\" CCG   BNT   BHF CEQ   CFR   BQQ    chromosome1_33    NA    NA    NA  NA    NA    \"0/0\"  chromosome1_137   NA    NA    NA  \"0/0\" NA    NA     chromosome1_176   \"0/1\" \"0/0\" NA  \"0/2\" \"0/0\" NA     chromosome1_176.1 \"0/1\" \"0/0\" NA  \"0/2\" \"0/0\" NA     chromosome1_184   \"0/1\" \"0/0\" NA  NA    \"0/0\" \"0/0\""},{"path":"/articles/Chapter 1.html","id":"output-2","dir":"Articles","previous_headings":"Step 1.3 - Expand","what":"Output:","title":"Chapter 1 - VCF file to GWAS matrix","text":"Notice now every row one REF one ALT. step1.3_output","code":""},{"path":"/articles/Chapter 1.html","id":"step-1-4---create-gwas-matrix","dir":"Articles","previous_headings":"","what":"Step 1.4 - Create GWAS Matrix","title":"Chapter 1 - VCF file to GWAS matrix","text":"step, GWAS matrix created first chapter process ends1. can choose want matrix include SNPs SNPs INDELs (default SNPs INDELs) Also, expanding previous step, variants now 0/0 need take now. step, go row row, using indication array previous step determine value given [, j] element genotype matrix. value can 0, 1, 2 NA. refer allele containing SNP minor allele use classic genetics nomenclature value 0 “/”, 1 “/” 2 “/”. (/means SNP appears alleles strain) main function used step “Get_GWAS_matrix”.","code":""},{"path":"/articles/Chapter 1.html","id":"output-3","dir":"Articles","previous_headings":"Step 1.4 - Create GWAS Matrix","what":"Output:","title":"Chapter 1 - VCF file to GWAS matrix","text":"output consists matrix can used GWAS analysis also mapping information (fixed info now) also needed analysis. Notice now genotypes (strains) column names now row names. GWAS matrix: (rs = reference SNP) step1.4_output","code":""},{"path":"/articles/Chapter 1.html","id":"step-1-5---offspring-gwas-matrix","dir":"Articles","previous_headings":"","what":"Step 1.5 - Offspring GWAS matrix","title":"Chapter 1 - VCF file to GWAS matrix","text":"GWAS matrix parents constructed, matrix offspring can constructed: Let’s look two possible parents 6 snps (covering possibilities). 3rd row shows offspring parents value options snps . 4th row shows probability value option happen (given specific situation). example, rs4 - parents 1 (“/”) therefore probability offspring 1 (“/”) 0.5, 0 (“/”) 0.25 2 (“/”) 0.25. manner offspring GWAS matrix built. Note: either parent missing info SNP (NA), offspring also get NA","code":""},{"path":"/articles/Chapter 1.html","id":"quarterly-results","dir":"Articles","previous_headings":"","what":"Quarterly Results","title":"Chapter 1 - VCF file to GWAS matrix","text":"Product Region (tab content) (tab content)","code":""},{"path":[]},{"path":"/articles/General.html","id":"gwas","dir":"Articles","previous_headings":"Motivation","what":"GWAS","title":"General","text":"aim Genome‐wide association studies (GWAS) identify single nucleotide polymorphisms (SNPs) allele frequencies vary systematically function phenotypic trait values. Identification trait‐associated SNPs may subsequently reveal new insights biological mechanisms underlying phenotypes. main package used GWAS “statgenGWAS”","code":""},{"path":"/articles/General.html","id":"vcf","dir":"Articles","previous_headings":"Motivation","what":"VCF","title":"General","text":"VCF files big genetic files working might complicated. main package used loading vcf file “vcfR”","code":""},{"path":"/articles/General.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"General","text":"server stronger computation available, required run functions (especially chapter 1). now, R markdown files show use package step step (chapter 1 chapter 2) aren’t publicly available. can send email maintainer package Weizmann institute users: package recommended executed WEXAC R server. required packages installed R 4.1.1 recommended. plotting, issues WEXAC server save files run plots pdf creations computer (unless know save )","code":""},{"path":"/articles/General.html","id":"installing-the-package","dir":"Articles","previous_headings":"","what":"Installing the package","title":"General","text":"","code":"if(!require(\"devtools\")){install.packages(\"devtools\")}  devtools::install_github(\"TomerAntman/VCFtoGWAS\")"},{"path":[]},{"path":"/articles/General.html","id":"rds","dir":"Articles","previous_headings":"R cheats and tips","what":"RDS","title":"General","text":"easiest way save file use R saving “.RDS” files (saw python packages reading RDS files haven’t tried). need save run: need load run: Sometimes reading RDS file uploaded list containing desired object. happens, run:","code":"saveRDS(some_object, \"some_path/some_object.RDS\") some_object =  readRDS(\"some_path/some_object.RDS\") some_object =  readRDS(\"some_path/some_object.RDS\")[[1]]"},{"path":"/articles/General.html","id":"paths","dir":"Articles","previous_headings":"R cheats and tips","what":"Paths","title":"General","text":"issue directories R. accepts forward slashes paths (/). cool cheat around copy full file path (can use Shift + Right click file opens menu “Copy path” option) run following line (constellation): example, put function beginning markdown like : every time copy directory just write Rstudio console:","code":"gsub('\"',\"\",gsub(\"\\\\\\\\\",\"/\",readClipboard())) paste_directory<-function(){gsub('\"',\"\",gsub(\"\\\\\\\\\",\"/\",readClipboard()))} paste_directory()"},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/package_intro.html","id":"gwas","dir":"Articles","previous_headings":"Package Manual > General > Motivation","what":"GWAS","title":"package_intro","text":"aim Genome‐wide association studies (GWAS) identify single nucleotide polymorphisms (SNPs) allele frequencies vary systematically function phenotypic trait values. Identification trait‐associated SNPs may subsequently reveal new insights biological mechanisms underlying phenotypes. main package used GWAS “statgenGWAS”","code":""},{"path":"/articles/package_intro.html","id":"vcf","dir":"Articles","previous_headings":"Package Manual > General > Motivation","what":"VCF","title":"package_intro","text":"VCF files big genetic files working might complicated. main package used loading vcf file “vcfR”","code":""},{"path":"/articles/package_intro.html","id":"usage","dir":"Articles","previous_headings":"Package Manual > General","what":"Usage","title":"package_intro","text":"server stronger computation available, required run functions (especially chapter 1). now, R markdown files show use package step step (chapter 1 chapter 2) aren’t publicly available. can send email maintainer package |Weizmann institute users: |package recommended executed WEXAC R server. |required packages installed R 4.1.1 recommended. |plotting, issues WEXAC server save files run plots pdf creations computer (unless know save )","code":""},{"path":"/articles/package_intro.html","id":"installing-the-package","dir":"Articles","previous_headings":"Package Manual > General","what":"Installing the package","title":"package_intro","text":"","code":"if(!require(\"devtools\")){install.packages(\"devtools\")} #> Loading required package: devtools #> Loading required package: usethis  devtools::install_github(\"TomerAntman/VCFtoGWAS\")  #> Downloading GitHub repo TomerAntman/VCFtoGWAS@HEAD #> dplyr (1.0.7 -> 1.0.8) [CRAN] #> Installing 1 packages: dplyr #> Installing package into 'C:/Users/tomer/AppData/Local/Temp/RtmpQVSpv2/temp_libpath349461a63787' #> (as 'lib' is unspecified) #>  #>   There is a binary version available but the source version is later: #>       binary source needs_compilation #> dplyr  1.0.7  1.0.8              TRUE #> installing the source package 'dplyr' #>             checking for file 'C:\\Users\\tomer\\AppData\\Local\\Temp\\Rtmp0AbSfe\\remotes1ef48a47097\\TomerAntman-VCFtoGWAS-c95ca46/DESCRIPTION' ...     [32mv [39m   [38;5;247mchecking for file 'C:\\Users\\tomer\\AppData\\Local\\Temp\\Rtmp0AbSfe\\remotes1ef48a47097\\TomerAntman-VCFtoGWAS-c95ca46/DESCRIPTION' [39m [36m [39m #>            [38;5;247m- [39m [38;5;247m   [39m [38;5;247mpreparing 'VCFtoGWAS': [39m [36m [36m (583ms) [36m [39m #>    checking DESCRIPTION meta-information ...       checking DESCRIPTION meta-information ...      [32mv [39m   [38;5;247mchecking DESCRIPTION meta-information [39m [36m [39m #>            [38;5;247m- [39m [38;5;247m   [39m [38;5;247mchecking for LF line-endings in source and make files and shell scripts [39m [36m [39m #>            [38;5;247m- [39m [38;5;247m   [39m [38;5;247mchecking for empty or unneeded directories [39m [36m [39m #>        NB: this package now depends on R (>=          NB: this package now depends on R (>= 3.5.0) #>      WARNING: Added dependency on R >= 3.5.0 because serialized objects in #>      serialize/load version 3 cannot be read in older versions of R. #>      File(s) containing such objects: #>        'VCFtoGWAS/data/SacCer_sgd_cds.rda' #>      [38;5;247m- [39m [38;5;247m   [39m [38;5;247mbuilding 'VCFtoGWAS_0.1.2.tar.gz' [39m [36m [39m #>         #>  #> Warning: package 'VCFtoGWAS' is in use and will not be installed"},{"path":"/articles/package_intro.html","id":"output-structure","dir":"Articles","previous_headings":"Package Manual > General","what":"Output structure","title":"package_intro","text":"","code":"#> Loading required package: data.tree #>                                           levelName #> 1  Results                                          #> 2   ¦--Chapter1-VCF2GWAS                            #> 3   ¦   °--Step1.1-Upload_VCF                       #> 4   ¦       ¦--fix_sub.RDS                          #> 5   ¦       ¦--gt_GTonly.RDS                        #> 6   ¦       °--Step1.2-Filter_genotypes             #> 7   ¦           ¦--fix_filt.RDS                     #> 8   ¦           ¦--gt_GTonly_filt.RDS               #> 9   ¦           °--Step1.3-Expand                   #> 10  ¦               ¦--fix_filt_expand.RDS          #> 11  ¦               ¦--indication.RDS               #> 12  ¦               ¦--gt_GTonly_filt_expand.RDS    #> 13  ¦               °--Step1.4-GWAS_Matrix          #> 14  ¦                   ¦--mapping_info.RDS         #> 15  ¦                   ¦--GWAS_mat.RDS             #> 16  ¦                   ¦--phenotypes.csv           #> 17  ¦                   ¦--offspring_GWAS_mat.RDS   #> 18  ¦                   °--offspring_phenotypes.csv #> 19  °--Chapter2-Analysis                            #> 20      °--Step2.1-Create_gData                     #> 21          ¦--gData.RDS                            #> 22          °--Step2.2-Single_Trait_GWAS            #> 23              ¦--GWAS_Result.RDS                  #> 24              ¦--Significant_SNPs_information.csv #> 25              °--complete_results_plots.pdf"},{"path":[]},{"path":"/articles/package_intro.html","id":"step-1-1---upload-vcf-to-r","dir":"Articles","previous_headings":"Package Manual > Chapter 1 - VCF file to GWAS matrix","what":"Step 1.1 - Upload VCF to R","title":"package_intro","text":"…","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tomer Antman. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Antman T (2022). VCFtoGWAS: Get GWAS VCF file. R package version 0.1.2.","code":"@Manual{,   title = {VCFtoGWAS: Get GWAS out of VCF file},   author = {Tomer Antman},   year = {2022},   note = {R package version 0.1.2}, }"},{"path":"/index.html","id":"vcftogwas-","dir":"","previous_headings":"","what":"Get GWAS out of VCF file","title":"Get GWAS out of VCF file","text":"package built assist opening VCF files R (based vcfR package) processing data get GWAS matrix, execute GWAS analyze results. built wide tool assist everyone rather usefull tool specific dataset. Though can used datasets, work /thought might needed. complete instructional website can found : https://tomerantman.github.io/VCFtoGWAS/","code":""},{"path":"/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing:","title":"Get GWAS out of VCF file","text":"","code":"# Install development version from GitHub devtools::install_github(\"TomerAntman/VCFtoGWAS\")"},{"path":[]},{"path":"/reference/allele_presence_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allele presence correlating to feature\r\n — allele_presence_plot","text":"","code":"allele_presence_plot(gData, GWAS, GWAS_trial_name, checked_trait)"},{"path":"/reference/allele_presence_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allele presence correlating to feature\r\n — allele_presence_plot","text":"gData  GWAS  GWAS_trial_name  checked_trait","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/allele_presence_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Allele presence correlating to feature\r\n — allele_presence_plot","text":"Tomer Antman","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/Build_offspring_GWAS_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a GWAS matrix for the offspring\r\n — Build_offspring_GWAS_matrix","title":"Build a GWAS matrix for the offspring\r\n — Build_offspring_GWAS_matrix","text":"function serves step 1 chapter 1.1 \"Using VCFtoGWAS package\" markdown series. Based GWAS matrix parents (assuming matrix built based diploid parents), matrix built offspring parents.","code":""},{"path":"/reference/Build_offspring_GWAS_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a GWAS matrix for the offspring\r\n — Build_offspring_GWAS_matrix","text":"","code":"Build_offspring_GWAS_matrix(parent_GWAS_mat,                             offspring_strains,                             dir_results = getwd(),                             results_name = name_by_time(),                             do_save = TRUE,                             seed = 10,                             save_hashed_matrix = FALSE)"},{"path":"/reference/Build_offspring_GWAS_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a GWAS matrix for the offspring\r\n — Build_offspring_GWAS_matrix","text":"parent_GWAS_mat GWAS matrix (composed 0,1,2,NA) rownames parent strains offspring_strains array names offspring, must composed parent names dir_results directory folder created results saved. Make sure exists!!! results_name name folder results saved within dir_results (default time stamp, see create_directory function) do_save wish save results? (saved RDS files) (Default TRUE) seed function includes random sampling. seed can set changed. save_hashed_matrix wish also save \"mid-product\" function (hashed matrix). Default FALSE","code":""},{"path":"/reference/Build_offspring_GWAS_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a GWAS matrix for the offspring\r\n — Build_offspring_GWAS_matrix","text":"Hashing table: parent1 \"BNI\" parent2 \"BKE\" offspring name \"BNIBKE\". hashed value \"BNIBKE\" (denoted BNIBKE^[,j]) given : BNIBKE^[,j] = (BNI[,j] + BKE[,j]) + (BNI[,j] * BKE[,j]) Un-hashing table: (0 + 0) + (0 * 0) = 0 ==> BNIBKE[,j] = 0 (0 + 1) + (0 * 1) = 1 ==> BNIBKE[,j] = 0 1 (0 + 2) + (0 * 2) = 2 ==> BNIBKE[,j] = 1 (1 + 1) + (1 * 1) = 3 ==> BNIBKE[,j] = 0 1 2 (1 + 2) + (1 * 2) = 5 ==> BNIBKE[,j] = 1 2 (2 + 2) + (2 * 2) = 8 ==> BNIBKE[,j] = 2 NA results NA","code":""},{"path":"/reference/Build_offspring_GWAS_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a GWAS matrix for the offspring\r\n — Build_offspring_GWAS_matrix","text":"returned object list length 3 1: offspring_GWAS_mat created GWAS matrix offspring (always returned) mapping_info_offspring mapping info linking SNPs location (creation new matrix, SNPs removed) results_directory results saved, directory saved","code":""},{"path":"/reference/Build_offspring_GWAS_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build a GWAS matrix for the offspring\r\n — Build_offspring_GWAS_matrix","text":"Tomer Antman","code":""},{"path":"/reference/Create_complete_snp_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Complete SNP data\r\n — Create_complete_snp_data","title":"Create Complete SNP data\r\n — Create_complete_snp_data","text":"Given set results GWAS analysis (trial+trait) relevant mapping information SNPs data - function creates dataframe information SNPs identified significant (can saved csv.","code":""},{"path":"/reference/Create_complete_snp_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Complete SNP data\r\n — Create_complete_snp_data","text":"","code":"Create_complete_snp_data(GWAS_trial_snps, trait, mapping_info, genes_df)"},{"path":"/reference/Create_complete_snp_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Complete SNP data\r\n — Create_complete_snp_data","text":"GWAS_trial_snps SNPs certain GWAS trial (example`GWAS_trial_snps <- GWAS$signSnp[[GWAS_trial_name]]`) trait desired trait (analysed GWAS) mapping_info fixed information SNPs, linking unique names SNP's location type. genes_df Dataframe contains info genes (significant SNPs might ). yeast, included file package data (SacCer_sgd_cds)","code":""},{"path":"/reference/Create_complete_snp_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Complete SNP data\r\n — Create_complete_snp_data","text":"returned information includes attributes location genome SNP happens located gene coding sequence, dataframe also includes information gene alternated amino acid sequence","code":""},{"path":"/reference/Create_complete_snp_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Complete SNP data\r\n — Create_complete_snp_data","text":"SNP_information information metioned description details","code":""},{"path":"/reference/Create_complete_snp_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create Complete SNP data\r\n — Create_complete_snp_data","text":"Data source CDS file extraction create final dataframe used input, used create_SacCer_sgd_cds.R","code":""},{"path":"/reference/Create_complete_snp_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Complete SNP data\r\n — Create_complete_snp_data","text":"Tomer Antman","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/create_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a directory\r\n — create_directory","title":"Create a directory\r\n — create_directory","text":"Function ment create subdirectories save results current step.","code":""},{"path":"/reference/create_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a directory\r\n — create_directory","text":"","code":"create_directory(called_from,                  dir_results = base::getwd(),                  results_name = VCFtoGWAS::name_by_time())"},{"path":"/reference/create_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a directory\r\n — create_directory","text":"called_from function (step process) function called. added name subdirectory created function. dir_results directory subfolder created results saved. Make sure exists!!! entered directory exist (direcotry entered), subfolder created current working directory. results_name results_name parameter dictates folder (within dir_results folder) created save results. results name changed default (name_by_time), name based time constructed. Step name always added. Examples: default: \"2021-12-15_10.58_Step1-Upload_VCF-results\" Non default: \"OnlyHomozygousStrains_Step1-Upload_VCF-results\"","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/create_directory.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a directory\r\n — create_directory","text":"Tomer Antman","code":""},{"path":[]},{"path":[]},{"path":"/reference/create_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a directory\r\n — create_directory","text":"","code":"## The function is currently defined as function (called_from, dir_results = getwd(), results_name = name_by_time()) {     results_name <- paste0(results_name, \"_\", deparse(substitute(called_from)),         \"-results\")     results_directory <- paste0(dir_results, \"/\", results_name)     dir.create(results_directory)     if (grepl(\"No such file or directory\", names(last.warning))) {         message(results_name, \" folder couldn't be created because\\n\",             dir_results, \" directory doesn't exist.\\nTrying to create \",             results_name, \" folder in\\n\", getwd())         results_directory2 <- paste0(getwd(), \"/\", results_name)         dir.create(results_directory2)         if (grepl(\"No such file or directory\", names(last.warning))) {             stop(\"Couldn't create a directory to save the results\")         }         else {             results_directory <- results_directory2             message(\"Results will be saved into: \\n\", results_directory)         }     }     else if (grepl(\"already exists\", names(last.warning))) {         message(\"The results directory already exists, the results will be saved in:\\n\",             results_directory)     }     else {         message(\"Results directory created:\\n\", results_directory)     }     return(results_directory)   } #> function (called_from, dir_results = getwd(), results_name = name_by_time()) #> { #>     results_name <- paste0(results_name, \"_\", deparse(substitute(called_from)), #>         \"-results\") #>     results_directory <- paste0(dir_results, \"/\", results_name) #>     dir.create(results_directory) #>     if (grepl(\"No such file or directory\", names(last.warning))) { #>         message(results_name, \" folder couldn't be created because\\n\", #>             dir_results, \" directory doesn't exist.\\nTrying to create \", #>             results_name, \" folder in\\n\", getwd()) #>         results_directory2 <- paste0(getwd(), \"/\", results_name) #>         dir.create(results_directory2) #>         if (grepl(\"No such file or directory\", names(last.warning))) { #>             stop(\"Couldn't create a directory to save the results\") #>         } #>         else { #>             results_directory <- results_directory2 #>             message(\"Results will be saved into: \\n\", results_directory) #>         } #>     } #>     else if (grepl(\"already exists\", names(last.warning))) { #>         message(\"The results directory already exists, the results will be saved in:\\n\", #>             results_directory) #>     } #>     else { #>         message(\"Results directory created:\\n\", results_directory) #>     } #>     return(results_directory) #>   } #> <environment: 0x1272a950>"},{"path":[]},{"path":"/reference/create_SacCer_sgd_cds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SacCer_sgd_cds file for complete SNP info\r\n — create_SacCer_sgd_cds","text":"","code":"create_SacCer_sgd_cds()"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/Expand_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand rows of files — Expand_files","title":"Expand rows of files — Expand_files","text":"function serves step 3 chapter 1 \"Using VCFtoGWAS package\" markdown series. Expand fixed info genotype (gt) matrix row represents one SNP INDEL (now row represented position) output expanded fixed gt also array (called `indication` links two. Relevant next step)","code":""},{"path":"/reference/Expand_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand rows of files — Expand_files","text":"","code":"expand_files(gt_GTonly_filt,              fix_filt,              dir_results = getwd(),              results_name = name_by_time(),              do_save = TRUE)"},{"path":"/reference/Expand_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand rows of files — Expand_files","text":"gt_GTonly_filt filtered Genotype matrix (step2 output) fix_filt filtered fixed information dataframe (step2 output) dir_results directory folder created results saved. Make sure exists!!! results_name name folder results saved within dir_results (default time stamp, see create_directory) do_save wish save results? (saved RDS files) (Default TRUE)","code":""},{"path":"/reference/Expand_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expand rows of files — Expand_files","text":"large files might take . explanation indication array returned: example, row number 3 fix_filt represents position two ALTs (like: [C, TG]) REF (like: []),  fix_filt_expand two rows (3.0, 3.1) one ALT . indication array get \"1\" row 3.0 \"2\" row 3.1. array link data fix_filt_expand data gt_GTonly_filt_expand. indication[] gives us id number alternative sequence certain location. 1 number (specifically 6 can ). simpler terms: pre-processing, row fix_filt_expand represents one alteration reference (one ALT). Since position might several alterations (fix_filt), indication array indicates alteration represented row (regards position genome).","code":""},{"path":"/reference/Expand_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand rows of files — Expand_files","text":"fix_filt_expand dataframe fixed information. row represents one variant(one SNP INDEL). extra column: `ALT_options` represents number alterations exist per genomic position data gt_GTonly_filt_expand matrix number times row appears affected `ALT_options` fix_filt_expand indication array link data fix_filt_expand data gt_GTonly_filt_expand","code":""},{"path":"/reference/Expand_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expand rows of files — Expand_files","text":"Tomer Antman","code":""},{"path":"/reference/Expand_files.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Expand rows of files — Expand_files","text":"run results Filter_genotypes function step 2.","code":""},{"path":[]},{"path":[]},{"path":"/reference/Filter_genotypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter the genotypes (strains) — Filter_genotypes","title":"Filter the genotypes (strains) — Filter_genotypes","text":"function serves step 2 chapter 1 \"Using VCFtoGWAS package\" markdown series. Based array specific strains, genotype matrix filtered contain strains. Afterwards, Rows now contain irrelevant SNPs (add information) omitted.","code":""},{"path":"/reference/Filter_genotypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter the genotypes (strains) — Filter_genotypes","text":"","code":"Filter_genotypes(genotype_matrix,                  fixed_data,                  strains = \"\",                  dir_results = getwd(),                  results_name = name_by_time(),                  do_save = TRUE,                  on_columns = TRUE,                  filter_zeros = TRUE)"},{"path":"/reference/Filter_genotypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter the genotypes (strains) — Filter_genotypes","text":"genotype_matrix Gentoype matrix rows SNPs (variants) columns strains (genotypes) created step 1 Upload_vcf_to_R fixed_data  strains  dir_results directory folder created results saved. Make sure exists!!! results_name name folder results saved within dir_results (default time stamp, see create_directory) do_save wish save results? (saved RDS files) (Default TRUE) on_columns actions assume strain names appear column names. reason entered matrix transposed (strains row names), parameter given FALSE (default TRUE). filter_zeros TRUE default. function filters variants NA. parameter TRUE, also filters variant rows variant appear genotypes.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/name_by_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Create name by time stamp\r\n — name_by_time","title":"Create name by time stamp\r\n — name_by_time","text":"function creates string current date time (using Sys.time()) used default unique folder names","code":""},{"path":"/reference/name_by_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create name by time stamp\r\n — name_by_time","text":"","code":"name_by_time()"},{"path":[]},{"path":"/reference/name_by_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create name by time stamp\r\n — name_by_time","text":"results_name time-stamp string can used file- folder- name","code":""},{"path":[]},{"path":"/reference/name_by_time.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create name by time stamp\r\n — name_by_time","text":"Tomer Antman","code":""},{"path":[]},{"path":[]},{"path":"/reference/name_by_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create name by time stamp\r\n — name_by_time","text":"","code":"## The function is currently defined as function () {     results_name <- gsub(\":\", \".\", Sys.time())     results_name <- gsub(\" \", \"_\", results_name)     results_name <- substr(results_name, 1, nchar(results_name) -         3)     return(results_name)   } #> function () #> { #>     results_name <- gsub(\":\", \".\", Sys.time()) #>     results_name <- gsub(\" \", \"_\", results_name) #>     results_name <- substr(results_name, 1, nchar(results_name) - #>         3) #>     return(results_name) #>   } #> <environment: 0x1265cd30>"},{"path":"/reference/Upload_vcf_to_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn vcf files to usable R files\r\n — Upload_vcf_to_R","title":"Turn vcf files to usable R files\r\n — Upload_vcf_to_R","text":"function serves step 1 chapter 1 \"Using VCFtoGWAS package\" markdown series. script loads vcf file want work  (either processed \"usegalaxy\" server ). file can uploaded zipped version (.gz file extension). vcf processing based [vcfR package](https://cran.r-project.org/web/packages/vcfR/vignettes/intro_to_vcfR.html).","code":""},{"path":"/reference/Upload_vcf_to_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn vcf files to usable R files\r\n — Upload_vcf_to_R","text":"","code":"Upload_vcf_to_R(vcf_file,                 dir_results = getwd(),                 results_name = name_by_time(),                 do_save = TRUE,                 do_return = TRUE,                 get_chr_info = TRUE,                 fix_columns = c(\"CHROM\",\"POS\",\"REF\",\"ALT\",\"QUAL\"))"},{"path":"/reference/Upload_vcf_to_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn vcf files to usable R files\r\n — Upload_vcf_to_R","text":"vcf_file location vcf file saved dir_results directory subfolder created results saved. Make sure exists!!! results_name name folder results saved within dir_results (default time stamp, see create_directory) do_save wish save results? (saved RDS files) (Default TRUE) do_return wish return results current workspace environment? (Default TRUE) get_chr_info Information regarding lengths chromosomes (Default TRUE) fix_columns column names wish get fixed column vcf (default probably need change )","code":""},{"path":"/reference/Upload_vcf_to_R.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turn vcf files to usable R files\r\n — Upload_vcf_to_R","text":"files usually large take . files exported saved .RDS files. lighter easy read R calling readRDS(file = filepath). Extract genotypes vcf data: GT: genotype, encoded allele values separated either / |. allele values : 0 reference allele (REF field) 1 first allele listed ALT 2 second allele listed ALT. 3 third allele listed ALT . diploid calls examples 0/1, 1|0, 1/2, etc. call made sample given locus, '.' specified missing allele GT field (example './.' diploid genotype '.' haploid genotype). meanings separators follows: / : genotype unphased | : genotype phased","code":""},{"path":"/reference/Upload_vcf_to_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn vcf files to usable R files\r\n — Upload_vcf_to_R","text":"do_return = TRUE: fix_and_gt list two matrices: filtered fixed information (without unnecessary columns) corresponding genotype section VCF do_return = FALSE: results_directory string directory results saved.","code":""},{"path":"/reference/Upload_vcf_to_R.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Turn vcf files to usable R files\r\n — Upload_vcf_to_R","text":"See vcfR package information also see \"usegalaxy\" VCFselectsamples tool pre-filter data","code":""},{"path":"/reference/Upload_vcf_to_R.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Turn vcf files to usable R files\r\n — Upload_vcf_to_R","text":"Tomer Antman","code":""},{"path":"/reference/Upload_vcf_to_R.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Turn vcf files to usable R files\r\n — Upload_vcf_to_R","text":"Make sure enter proper file routes (vcf_route) : 1) \"somefolder/1011Matrix.gvcf.gz\"  2) \"Galaxy4_VCFselectsamples.vcf\" also proper results route exist (dir_results) : 1) \"somefolder\"  2) \"C:/Users/user/Documents\"","code":""},{"path":[]},{"path":"/reference/Upload_vcf_to_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn vcf files to usable R files\r\n — Upload_vcf_to_R","text":"","code":"files_directory <- Upload_vcf_to_R(                                   vcf_file = \"1011Matrix.gvcf.gz\",                                   dir_results = \"C:/Users/user/Documents\",                                   do_return = FALSE                                   ) #> Warning: cannot create dir 'C:\\Users\\user\\Documents\\090222_18.22_Step1.1-Upload_VCF', reason 'No such file or directory' #>  #> Results directory created: #> C:/Users/user/Documents/090222_18.22_Step1.1-Upload_VCF #> Loading required package: vcfR #>  #>    *****       ***   vcfR   ***       ***** #>    This is vcfR 1.12.0  #>      browseVignettes('vcfR') # Documentation #>      citation('vcfR') # Citation #>    *****       *****      *****       ***** #> Warning: the condition has length > 1 and only the first element will be used #> [[1]] #> $src #> [1] \"vcf <- read.vcfR(vcf_file, verbose = FALSE)\" #>  #> attr(,\"class\") #> [1] \"source\" #>  #> [[2]] #> <simpleWarning in file(file, \"r\"): cannot open file '1011Matrix.gvcf.gz': No such file or directory> #>  #> [[3]] #> <simpleError in file(file, \"r\"): cannot open the connection> #>  #> 2022-02-09 18:22:50 - getting chromosome info #> Loading required package: stringr #> Loading required package: readr #> Error in startsWith(vcf@meta, \"##contig=<ID=chromosome\"): object 'vcf' not found print(files_directory) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'print': object 'files_directory' not found"},{"path":"/news/index.html","id":"vcftogwas-010","dir":"Changelog","previous_headings":"","what":"VCFtoGWAS 0.1.0","title":"VCFtoGWAS 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
